---
- hosts: all #testservers
  vars:
    USER_EMAIL: dakharkara@gmail.com
    USER_NAME: "dakharkara"
    USER_PASSWORD: "4NQzebcHNUVJTjPB"
    
    APP_NAME: "courierwebapp"
    DIRECTORY: "/home/dakharkara/courierwebapp"
    SSH_KEY_DIRECTORY: "/home/dakharkara/.ssh"
    APP_CONTAINER_DIRECTORY: "/home/dakharkara"

    
    mysql_root_password: dKpwBaUEys65nRbp
    MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"    
    DATABASE_NAME: dak_harkara
    
    APP_MYSQL_USER: dak_harkara
    APP_MYSQL_PASSWORD: 6hNWSTUyBPrEv9hP
    
    FORWARDED_HOST: "localhost"
    FORWARDED_PORT: "8000"
        
  remote_user: root
  become: yes
  
  roles:
      - ansible-pip
      - ansible-role-mysql
  
  tasks:
    ######### Installing mysql instance ##################
    - name: Update the instance
      become: yes
      apt: update-cache=yes
      
    - name: download dependencies
      apt: name={{ item }} state=present
      with_items:
        - python-dev
        - libmysqlclient-dev
      
    - name: Installing MysqlDb for ansible mysql installation
      become: yes
      pip: name=MySQL-python state=present
    
    - name: Install the git
      sudo: yes
      apt:
         name=git
         state=present

    - name: Create the user for this app deployment
      sudo: yes
      user:
        name={{ USER_NAME }}
        password={{ USER_PASSWORD }}
        createhome=yes
        state=present
        update_password=always
        generate_ssh_key=yes

    - name: Permit on ssh folder
      become: yes
      command: "chmod -R 755 {{ SSH_KEY_DIRECTORY }}"

    - name: Transfer the private key
      become: yes
      copy:
        src="key_files/id_rsa"
        dest="{{ SSH_KEY_DIRECTORY }}/id_rsa"
        owner="{{ USER_NAME }}"
        mode=0755

    - name: Transfer the public key
      become: yes
      copy:
        src="key_files/id_rsa.pub"
        dest="{{ SSH_KEY_DIRECTORY }}/id_rsa.pub"
        owner="{{ USER_NAME }}"
        mode=0755

    - name: Config the eamil of the git user
      become: yes
      command: git config --global user.email {{ USER_EMAIL }}

    - name: Config the eamil of the git user
      become: yes
      command: git config --global user.name {{ USER_NAME }}

    - name: Omit the changes by the git for file permission changes
      become: yes
      command: git config --global core.filemode false

    - name: Clone the repository in project Directory
      sudo: yes
      git:
        repo=git@bitbucket.org:courier-handler/courierwebapp.git
        dest={{ DIRECTORY }}
        accept_hostkey=yes
        key_file="{{  SSH_KEY_DIRECTORY }}/id_rsa"
        update=yes
        force=yes
        version='development'

    - name: Add the permission for the directory
      become: yes
      command: chmod -R 755 {{ DIRECTORY }}
      
    ######### Mysql Set up ##############
    - name: Set the root password for mysql
      become: yes
      mysql_user: name=root password={{ MYSQL_ROOT_PASSWORD }} update_password=always
    
    - name: Install MySQL for production ready server      
      become: yes
      mysql_db: name={{ DATABASE_NAME }} state=present login_user=root login_password={{ MYSQL_ROOT_PASSWORD }}            
          
    #- name: Removes anonymous user account for localhost
    #  mysql_user: name='' host=localhost state=absent              
    
    #- name: Removes anonymous user account for localhost
    #  mysql_user: name='' host_all=yes state=absent 
    
    - name: Creating the database user for this application
      become: yes
      mysql_user: name={{ APP_MYSQL_USER }} password={{ APP_MYSQL_PASSWORD }} priv={{ DATABASE_NAME }}.*:ALL update_password=always login_user=root login_password={{ MYSQL_ROOT_PASSWORD }}          

    ##### Install nodejs ######
    - name: install the nodejs deb
      become: yes
      apt: name=nodejs update-cache=yes
    
    - name: Symlink fr older node
      become: yes
      file:
        src="/usr/bin/nodejs"
        dest="/usr/bin/node"
        state=link
      ignore_errors: yes
    
    - name: install the npm deb
      become: yes
      apt: name=npm update-cache=yes
    
    #### INstall Npm dependencies in package.json ####
    
    - name: install the application nodejs packages depencies
      become: yes 
      npm: path={{ DIRECTORY }}   global=no state=present
    
    - name: install the application nodejs packages depencies
      become: yes 
      npm: path={{ DIRECTORY }}   global=yes state=present
    ###### Nodejs process Manager ########
    - name: install the PM2
      become: yes
      npm: name=pm2 global=yes   
    
    - name: stop the process for the app
      become: yes
      command: pm2 delete api_process
      ignore_errors: yes
      
    - name: start the process for the app
      become: yes
      shell: "pm2 start {{ DIRECTORY }}/bin/www -f --name api_process"

     
- hosts: all #testservers
  remote_user: root

  vars:
    DIRECTORY: "/home/dakharkara/courierwebapp"
    APP_NAME: "courierwebapp"
    STATIC_DIRECTORY: "{{ DIRECTORY }}/static/"

    PROTOCOL: "http"
    PORT: 80
    HOST: "0.0.0.0"

    API_DOMAIN_NAME: "api.omexcourier.com"
    
    MAX_BODY_SIZE: "1024m"

    FORWARDED_PROTOCOL: "http"
    FORWARDED_HOST: "localhost"
    FORWARDED_PORT: "8000"
    
    API_VIRTUAL_HOST_NAME: "{{ API_DOMAIN_NAME }}"
    API_VIRTUAL_HOST_IP: "127.0.0.11"    

    #ansible_python_interpreter: "{{ DIRECTORY }}/env/bin/pyvenv"

  tasks:
    - name: install the nginx
      become: yes
      apt: name=nginx state=present

    - name: Stop nginx
      become: yes
      service: name=nginx state=stopped    
          
    - name: transfer the file to config directory of nginx
      become: yes
      template:
        src="templates/api.omexcourier.com.j2"
        dest="/etc/nginx/sites-available/api.omexcourier.com"
        force=yes

    - name: Remove any symlinked file from previously enabled config
      become: yes
      file:
        src="/etc/nginx/sites-available/api.omexcourier.com"
        dest="/etc/nginx/sites-enabled/api.omexcourier.com"
        state=link
      ignore_errors: yes
    
    - name: Edit the hosts file
      become: yes
      lineinfile:
        dest=/etc/hosts
        regexp="{{ API_VIRTUAL_HOST_IP }} {{ API_VIRTUAL_HOST_NAME }}"       
        line="{{ API_VIRTUAL_HOST_IP }} {{ API_VIRTUAL_HOST_NAME }}"
        owner=root
        group=root
        mode=0644
        state=present
        
    - name: Enable 80 PORT
      command: 'sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT'
      ignore_errors: yes               

    - name: Restart the nginx
      become: yes
      service:
        name=nginx
        state=reloaded
        enabled=yes
        
    - name: Restart the nginx
      become: yes
      service:
        name=nginx
        state=restarted
        enabled=yes

- hosts: all
  remote_user: root
  tasks:
    - name: Install php5-fpm
      become: yes
      apt: name=php5-fpm state=present update-cache=yes
    
    - name: Reload the php5-fpm server
      become: yes
      service: name=php5-fpm state=reloaded enabled=yes
    
    - name: Restart the php5-fpm server
      become: yes
      service: name=php5-fpm state=restarted enabled=yes

- hosts: all
  remote_user: root
  roles:
    - { role: mjanser.phpmyadmin }
  tasks:
    - name: Symlink the phpmyadmin
      file: src="/usr/share/phpmyadmin" dest="/usr/share/nginx/html/phpmyadmin" state=link 
      
    - name: Reload the nginx
      service: name=nginx state=reloaded enabled=yes      
           
- hosts: all
  remote_user: root  
  vars:
       APPLICATION_DIRECTORY: "/home/dakharkara/courierwebclient"
       SSH_KEY_DIRECTORY: "/home/dakharkara/.ssh"
       APP_CONTAINER_DIRECTORY: "/home/dakharkara"
           
       DOMAIN_NAME: "omexcourier.com"
        
       MAX_BODY_SIZE: "1024m"
        
       WEBCLIENT_PROTOCOL: "http"
       WEBCLIENT_HOST: "localhost"
       WEBCLIENT_PORT: "8002"

       VIRTUAL_HOST_NAME: "{{ DOMAIN_NAME }}"
       VIRTUAL_HOST_IP: "127.0.0.10"
       
       
  tasks:
  
    - name: Clone the repository in project Directory
      become: yes
      git:
        repo=git@bitbucket.org:courier-handler/courierwebclient.git
        dest="{{ APPLICATION_DIRECTORY }}"        
        accept_hostkey=yes
        key_file="{{  SSH_KEY_DIRECTORY }}/id_rsa"
        update=yes
        force=yes
        version='universal-layout'
 
    - name: Add the permission for the directory
      become: yes
      command: chmod -R 755 {{ APPLICATION_DIRECTORY }}            
    
    #### INstall Npm dependencies in package.json ####    
    - name: install the application nodejs packages depencies
      become: yes 
      npm: path={{ APPLICATION_DIRECTORY }}   global=no state=present
    
    - name: install the application nodejs packages depencies
      become: yes 
      npm: path={{ APPLICATION_DIRECTORY }}   global=yes state=present
      
    - name: create bundle.js
      become: yes
      command: "npm run gen-dist"
      args:
        chdir: "{{ APPLICATION_DIRECTORY }}"        
        
    - name: stop the process for the app
      become: yes
      command: pm2 delete application_process
      ignore_errors: yes
      
    - name: start the process for the app
      become: yes
      command: "pm2 start bin/www -f --name application_process"
      args:
        chdir: "{{ APPLICATION_DIRECTORY }}"
      ignore_errors: true
      
    - name: transfer the file to config directory of nginx
      become: yes
      template:
        src="templates/omexcourier.com.j2"
        dest="/etc/nginx/sites-available/omexcourier.com"
        force=yes
    
    - name: Remove any symlinked file from previously enabled config
      become: yes
      file:
        src="/etc/nginx/sites-available/omexcourier.com"
        dest="/etc/nginx/sites-enabled/omexcourier.com"
        state=link
      ignore_errors: yes
    
    - name: Edit the hosts file
      become: yes
      lineinfile:
        dest=/etc/hosts       
        regexp="{{ VIRTUAL_HOST_IP }} {{ VIRTUAL_HOST_NAME }}"        
        line="{{ VIRTUAL_HOST_IP }} {{ VIRTUAL_HOST_NAME }}"
        owner=root
        group=root
        mode=0644
        state=present
    
    - name: Restart the nginx
      become: yes
      service:
        name=nginx
        state=reloaded
        enabled=yes  
        
    - name: Restart the nginx
      become: yes
      service:
        name=nginx
        state=restarted
        enabled=yes